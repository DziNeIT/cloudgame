import org.apache.tools.ant.filters.ReplaceTokens
apply plugin: 'java'

import org.yaml.snakeyaml.Yaml
Yaml yaml = new Yaml()
ext.plugin = yaml.load(new FileInputStream(new File(projectDir, "src/main/resources/plugin.yml")))

jar.baseName = plugin.name

defaultTasks 'clean', 'build'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath group: 'org.yaml', name: 'snakeyaml', version: '1.5'
    }
}

repositories {
    mavenCentral()
    maven {
        url 'http://repo.md-5.net/content/groups/public/'
    }
}

dependencies {
    compile group: 'org.bukkit', name: 'bukkit', version: '1.7.5-R0.1-SNAPSHOT'
}

def cmd(str) {
    try {
        def output = new ByteArrayOutputStream()
        exec {
            commandLine str.split(' ')
            standardOutput = output
        }
        return output.toString().trim()
    }
    catch (ignored) {
        return null;
    }
}

processResources {
    from('src/main/resources') {
        include '*'
        filter { String line -> line.replace('$version', cmd('git describe --always --dirty=-dirty')) }
    }
}

task scaffold << {
    // Make artifact source directory
    def artifactPath = new File('src/main/java/' + plugin.main.replace('.', '/')).getAbsolutePath()
    def artifactSrcDir = new File(artifactPath.substring(0, artifactPath.lastIndexOf(File.separator)))
    artifactSrcDir.mkdirs()
    
    // Copy plugin bootstrap file over
    copy {
        from '.bootstrap/'
        into artifactSrcDir.getPath()
        include 'PluginBootstrap.java'
        rename '.*', plugin.name + '.java'
        
        filter(ReplaceTokens, tokens: [pluginName: plugin.name])
    }
    
    if ((cmd('git remote -v') =~ /origin.+?bukkit-bootstrap\.git/).find()) {
        cmd('git remote rename origin bukkit-bootstrap')
    }
}

task testCopy << {
    cmd("mkdir -p $testPluginDir")
    cmd("cp $projectDir/build/libs/${jar.baseName}.jar $testPluginDir")
}

task remoteCopy << {
    cmd("scp $projectDir/build/libs/${jar.baseName}.jar $remotePluginDir")
}
