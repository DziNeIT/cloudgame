import org.apache.tools.ant.filters.ReplaceTokens
apply plugin: 'java'

ext.pluginName = 'MyPlugin'
ext.desc = 'A simple Bukkit plugin.'
ext.author = 'AlbireoX'
ext.url = 'http://ianmacalinao.com/'
ext.groupName = 'com.simplyian'

// Do not modify
ext.artifact = pluginName.toLowerCase()
ext.mainClass = groupName + '.' + artifact + '.' + pluginName
jar.baseName = pluginName

defaultTasks 'clean', 'build', 'testmc'

repositories {
    mavenCentral()
    maven {
        url 'http://repo.md-5.net/content/groups/public/'
    }
}

dependencies {
    compile group: 'org.bukkit', name: 'bukkit', version: '1.7.5-R0.1-SNAPSHOT'
}

def cmd(str) {
    try {
        def output = new ByteArrayOutputStream()
        exec {
            commandLine str.split(' ')
            standardOutput = output
        }
        return output.toString().trim()
    }
    catch (ignored) {
        return null;
    }
}

processResources {
    from('src/main/resources') {
        include 'plugin.yml'
        filter(ReplaceTokens, tokens: [
                pluginName: project.pluginName,
                desc: project.desc,
                version: cmd('git describe --always --dirty=-dirty'),
                author: project.author,
                website: project.url,
                mainClass: project.mainClass
            ])
    }
}

task scaffold << {
    // Make artifact source directory
    ext.artifactSrcDir = new File('src/main/java/' + groupName.replace('.', '/')
        + '/' + artifact.replace('.', '/') + '/')
    artifactSrcDir.mkdirs()
    
    // Copy plugin bootstrap file over
    copy {
        from '.bootstrap/'
        into ext.artifactSrcDir.getPath()
        include 'PluginBootstrap.java'
        rename '.*', pluginName + '.java'
        
        filter(ReplaceTokens, tokens: [pluginName: pluginName])
    }
    
    if ((cmd('git remote -v') =~ /origin.+?bukkit-bootstrap\.git/).find()) {
        cmd('git remote rename origin bukkit-bootstrap')
    }
}

